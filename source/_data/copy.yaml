parameters:
    copy:
        killer_headline: "You won't have to upgrade PHP code manually - ever again"

        # left and right
        left_right:
            title: "2 Ways to Make Legacy Code Gone"

        instant_upgrades:
            title: Instant Upgrades
            bullets:
                - Do you want to migrate from PHP 5.3 to 7.1?
                - Do you want to use the newest Symfony without reading changelogs?
                - Are you stuck on legacy code because you have to "delivery features"?

        instant_refactoring:
            title: Instant Refactoring
            bullets:
                - Do you migrate from legacy code?
                - Do you want to switch from Nette to Symfony?
                - Do you want turn static to constructor injection in 1000 classes?

        video:
            title: "Must be Complicated, Right?"

# Story
#    - First there was framrwork or php.
#    - they developed, each 2 year new version of PHP and Symfony ...
#    - people were happy for new features
#    - but there was BC break
#    - and that ment fixing bugs for each change
#    - it cost money
#    - CEOs were not happy with costs on this
#    - so they ordered not to upgrade any code and only develop new features
#
#    - the developers were frustrated, they have to maintain 2 version, old an new one; not only 2 actually, one for each new version
#    - once, they complained so much, the CEO invited a consultant to help with the upgrade - it was chaper and faster to have someoney who does it eveyrday
#
#    - so they consulted companies and taught them
#    - i was one fo them
#
#
#
#    - silné stránky + handicap
#        - they I saw it was repeated work, and I could only make only few companies to upgrade; I would have to travel every 2 yeras to every company using Ssymfony
#        - is it really worth it my time, CEO's money, developers time, understanding and reading every 2 years?
#
#    - what if all PHP companies in the world could benefit from one upgrade path?
#    - what if company owner's didn't have to pay to keep code upgradedes
#    - what if programmer didn't have ot push companies and theny quite them after years of frustration?
#    - what if programmers didn't have to read CHANGELOGs  and study them in their free time?
#
#
#
#
#    - number
#
#        CHANGELOG.md content
#
#    - Symfony 2017 has x KB of changelogs - it's like Shakespeares works... x tim
#
#
#    -
#
#    ---
#
#        retor - moetions
#
#                                       - 1998 → 2018 in seconds
#
#                                           - timeline
#                                           - 1998 - human
#                                           - 20XX - composer
#                                           - 20xx - php 5
#                                           - 20xx - ast
#                                           - 20xx - php 7
#                                           - 20xx - php 8
#                                           - 20XX - semver-less upgrades
#
#        "when helping others help you" - you help one, it helps 1000 other websites
#
#
#                                       - bojujejem proti starému systému
#                                           - manual
#                                           - expensive
#                                           - more code → větší dluh
#
#                                       - nejdůležitější jsou lidi - vy!
#
#
#
#                                       - lidi zajímá, jaké velké překážky jsme museli překnovat
#
#
#
#
#    ---
#  hledeje za čísly reálné liid
#
#    - kdo to využil
#    - kdo co musel překnovat
#    - výslekdy? jendotlivci
#
#
#
#        Důvěra + emoce + logika
#
#    - řada překážek- dobrý :)